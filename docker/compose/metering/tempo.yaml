# DOCS: https://grafana.com/docs/tempo/latest/configuration/

# tempo.yaml â€“ local configuration for Tempo

stream_over_http_enabled: true

server:
  http_listen_port: 3200
  log_level: info

# No cache for local setup.

query_frontend:
  search:
    duration_slo: 5s
    throughput_bytes_slo: 1.073741824e+09
    metadata_slo:
      duration_slo: 5s
      throughput_bytes_slo: 1.073741824e+09
  trace_by_id:
    duration_slo: 100ms
  metrics:
    max_duration: 120h              # Increase for local setups if needed.
    query_backend_after: 5m
    duration_slo: 5s
    throughput_bytes_slo: 1.073741824e+09

distributor:
  receivers:
    jaeger:
      protocols:
        thrift_http:
          endpoint: "tempo:14268"
        grpc:
          endpoint: "tempo:14250"
        thrift_binary:
          endpoint: "tempo:6832"
        thrift_compact:
          endpoint: "tempo:6831"
    zipkin:
      endpoint: "tempo:9411"
    otlp:
      protocols:
        grpc:
          endpoint: "tempo:4317"
        http:
          endpoint: "tempo:4318"
    opencensus:
      endpoint: "tempo:55678"

ingester:
  # For demo purposes, we cut (flush) the head block every 5 minutes.
  max_block_duration: 5m

compactor:
  compaction:
    block_retention: 24h

metrics_generator:
  registry:
    external_labels:
      source: tempo
      cluster: docker-compose
  storage:
    path: /var/tempo/generator/wal
    remote_write:
      - url: "http://prometheus:9090/api/v1/write"
        send_exemplars: true
  traces_storage:
    path: /var/tempo/generator/traces
  processor:
    local_blocks:
      filter_server_spans: false
      flush_to_storage: true

storage:
  trace:
    backend: local    # Using local filesystem storage
    wal:
      path: /var/tempo/wal
    local:
      path: /var/tempo/blocks

overrides:
  defaults:
    metrics_generator:
      # Enable three metrics generator processors.
      processors: [service-graphs, span-metrics, local-blocks]
      generate_native_histograms: both
