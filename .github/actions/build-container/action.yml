name: "Build Container"
description: "Builds and pushes Docker container images with configurable inputs"
inputs:
  image_name:
    description: "Full Docker image name (e.g., ghcr.io/org/repo/image)"
    required: true
  dockerfile_subdir:
    description: "Subdirectory under 'docker/' containing the Dockerfile (e.g., 'aptos-node')"
    required: true
  binaries_to_download:
    description: "Comma-separated list of binary names to download as artifacts (e.g., 'aptos-node,aptos')"
    required: true
  build_args:
    description: "Multi-line string of Docker build arguments (e.g., 'BINARY_PATH=target/debug ANOTHER_ARG=value')"
    required: false
    default: ""
  ghcr_username:
    description: "Username for GHCR login"
    required: true
  ghcr_password:
    description: "Password for GHCR login"
    required: true

outputs:
  image_name:
    description: "The Docker image name that was built and pushed"
  image_tag:
    description: "The tag of the Docker image that was built and pushed"
  registry:
    description: "The container registry where the image was pushed"
  artifact_name:
    description: "The name of the uploaded artifact"
runs:
  using: "composite"
  steps:
  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v3
    with:
      version: latest

  - name: Login to GHCR
    uses: docker/login-action@v3
    with:
      registry: ghcr.io
      username: ${{ inputs.ghcr_username }}
      password: ${{ inputs.ghcr_password }}

  - name: Set build environment
    run: |
      echo "GIT_SHA_SHORT=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
      echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
    shell: bash

  - name: Build and push Docker image
    run: |
      DOCKERFILE_PATH="docker/${{ inputs.dockerfile_subdir }}/Dockerfile"
      if [ ! -f "$DOCKERFILE_PATH" ]; then
        echo "Error: Dockerfile not found at $DOCKERFILE_PATH"
        exit 1
      fi

      BUILD_ARGS_ARRAY=()
      while IFS= read -r line; do
        [[ -n "$line" ]] && BUILD_ARGS_ARRAY+=("--build-arg" "$line")
      done <<< "${{ inputs.build_args }}"

      docker build \
        "${BUILD_ARGS_ARRAY[@]}" \
        -f "$DOCKERFILE_PATH" \
        -t ${{ inputs.image_name }}:${{ env.GIT_SHA_SHORT }} \
        -t ${{ inputs.image_name }}:latest .
      docker push ${{ inputs.image_name }}:${{ env.GIT_SHA_SHORT }}
    shell: bash

  - name: Output image information
    run: |
      echo "✅ Docker image built and pushed successfully!"
      echo "📦 Image: ${{ inputs.image_name }}:${{ env.GIT_SHA_SHORT }}"
      echo "🏷️  Tag: ${{ env.GIT_SHA_SHORT }}"
      echo "🌐 Registry: ${{ inputs.image_name }}"
    shell: bash
